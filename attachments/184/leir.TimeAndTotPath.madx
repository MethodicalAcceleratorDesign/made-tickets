 TuneH  =  1.82;
 TuneV  =  2.72;
 DisEC  = -0.00;
 BetHEC =  5.00;
 BetVEC =  5.00;
 kEddy  =  0.00;

! Define lattice .... first parameter, then CALL a routine

! LSSH = ((25.-2*4.17)*Pi - .0052)/8. ! To have a circumf. of 25 Pi m
 LSSH = 6.5422;	                ! From fit to survey data
 DFD = 0.;  !  Flag, if 1 DFD, if 0 FDF
 dLSext = 0.005;  ! Mag. length decrease of Quads due to adjacent X-Pole
 dLBmp  = 0.000;  ! Mag. length decrease of Quads due to adjacent Bumper
 dLDip  = 0.000;  ! Mag. length decrease of Quads due to adjacent Dipole
 dLSol  = 0.000;  ! Mag. length decrease of Quads due to adjacent correct. Sol.
 dLSkew = 0.005;  ! Mag. length decrease of Quads due to adjacent Skew Quad
 KickEC = 1.;     ! Flag whether kick due to cooler is taken into account (=1) or not (-0)   
                  

call, file="LEIR.seqx";


eg :=  0.938272+0.0042+10000; !  ... in GeV 

eg :=  0.938272*2.8385; !  ... in GeV on transition
eg :=  0.938272*1.1547; !  ... in GeV beta = 0.5

beam, particle = proton, energy = eg;  

use, period=LEIR;


select,flag=twiss,clear;
select, flag=twiss, column=name,s,betx,bety,alfx,alfy,mux,muy,dx,dpx,
                          re11,re12,re13,re14,re15,re16,
                          re21,re22,re23,re24,re25,re26,
                          re31,re32,re33,re34,re35,re36,
                          re41,re42,re43,re44,re45,re46,
                          re51,re52,re53,re54,re55,re56,
                          re61,re62,re63,re64,re65,re66;


twiss, rmatrix, chrom, save;

write, table=summ, file=summ1.txt;
alpha_c = table(summ,alfa);
gamma_tr = table(summ,gammatr);
dx = table(twiss,leir$end,dx);

plot, haxis=s, vaxis=betx,bety, colour=100;
plot, haxis=s, vaxis=dx,        colour=100;

write, table=twiss, file="leir.twiss";


select,flag=twiss,clear;
select, flag=twiss, column=name,s,beta11,beta22,alfa11,alfa22,mu1,mu2,disp1,disp2,
                          re11,re12,re13,re14,re15,re16,
                          re21,re22,re23,re24,re25,re26,
                          re31,re32,re33,re34,re35,re36,
                          re41,re42,re43,re44,re45,re46,
                          re51,re52,re53,re54,re55,re56,
                          re61,re62,re63,re64,re65,re66;



ptc_create_universe;
  ptc_create_layout, model=1, method=6, nst=5, exact=true, closed_layout=true;


  ptc_printframes, file="leir.C", format=rootmacro;!this prints my visualisation with ROOT

  !!!!!       T I M E   F A L S E,  T O T P A T H  T R U E 
  ptc_setswitch, debuglevel=1, exact_mis=true, time=false, totalpath=true;

 
  ! 4D and 5D does not make sense with totalpath
  ! this flag will be switched of automatically PTC
   
  !56D
  
  
  ptc_twiss, table=twiss, icase=56, no=2, closed_orbit;
  write, table=twiss, file="leir.56dl.ptc.twiss";
  alpha_c_56dl = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_56dl = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_56dl = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_56dl = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_56dl = table(ptc_twiss_summary,GAMMA_TR);
  dx_56dl = table(twiss,leir$end,disp1);
  eta_c_56dl    = table(ptc_twiss_summary,ETA_C);
  
  value,  gamma_t_56dl;
  value,  eta_c_56dl;
  value,  alpha_c_56dl;

  
!  ptc_twiss, table=twiss, icase=6, no=2, closed_orbit;
!  write, table=twiss, file="leir.6d.ptc.twiss";
!  alpha_c_6d = table(ptc_twiss_summary,ALPHA_C);
!  dx_6d = table(twiss,leir$end,disp1);


  !!!!!      T I M E   T R U E, ,  T O T P A T H  T R U E 
  ptc_setswitch, debuglevel=1, exact_mis=true, time=true, totalpath=true;

  ! 4d and 5d with total path does not exist
  ! PTC will switch the totpath flag automaticaly off   
  
  ptc_twiss, table=twiss, icase=56, no=2, closed_orbit;
  write, table=twiss, file="leir.time.56dl.ptc.twiss";
  alpha_c_56dtl = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_56dtl = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_56dtl = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_56dtl = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_56dtl = table(ptc_twiss_summary,GAMMA_TR);
  dx_56dtl = table(twiss,leir$end,disp1);
  eta_c_56dtl    = table(ptc_twiss_summary,ETA_C);
!  ptc_twiss, table=twiss, icase=6, no=2, closed_orbit;
!  write, table=twiss, file="leir.time.6d.ptc.twiss";
!  alpha_c_6dt = table(ptc_twiss_summary,ALPHA_C);
!  dx_6dt = table(twiss,leir$end,disp1);


value, dx, 
       dx_56d,  dx_56dt,  dx_5d,   dx_5dt,
       dx_56dl, dx_56dtl;!  5dl and  5dtl not existing 


value, eta_c_56d, eta_c_56dt, eta_c_5d,  eta_c_5dt,
       eta_c_56dl,eta_c_56dtl; !  5dl and  5dtl not existing 

value, alpha_c, 
       alpha_c_56d,  alpha_c_56dt, alpha_c_5d, alpha_c_5dt,
       alpha_c_56dl, alpha_c_56dtl; !  5dl and  5dtl not existing 

value, alpha_c_p_56d, alpha_c_p_56dt, alpha_c_p_5d,alpha_c_p_5dt,
       alpha_c_p_56dl,alpha_c_p_56dtl;

value, alpha_c_p2_56d, alpha_c_p2_56dt, alpha_c_p2_5d,alpha_c_p2_5dt,
       alpha_c_p2_56dl,alpha_c_p2_56dtl; !  5dl and  5dtl not existing 
       
value, alpha_c_p3_56d, alpha_c_p3_56dt, alpha_c_p3_5d,alpha_c_p3_5dt,
       alpha_c_p3_56dl,alpha_c_p3_56dtl; !  5dl and  5dtl not existing 

value, gamma_tr, 
       gamma_t_56d, gamma_t_56dt, gamma_t_5d, gamma_t_5dt, 
       gamma_t_56dl,gamma_t_56dtl; ! 5dl and  5dtl not existing 




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1





  !!!!!       T I M E   F A L S E,   T O T P A T H  F A L S E
  ptc_setswitch, debuglevel=1, exact_mis=true, time=false, totalpath=false;
  
!  ptc_twiss, table=twiss, icase=4, no=4, closed_orbit;
!  write, table=twiss, file="leir.4d.ptc.twiss";
!  alpha_c_4d = table(ptc_twiss_summary,ALPHA_C);
!  gamma_t_4d = table(ptc_twiss_summary,GAMMA_TR);
!  dx_4d = table(twiss,leir$end,disp1);
 
  
  ptc_twiss, table=twiss, icase=5, no=2, closed_orbit;
  write, table=twiss, file="leir.5d.ptc.twiss";
  alpha_c_5d    = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_5d  = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_5d = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_5d = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_5d    = table(ptc_twiss_summary,GAMMA_TR);
  dx_5d         = table(twiss,leir$end,disp1);
  eta_c_5d    = table(ptc_twiss_summary,ETA_C);
  
  
  value,alpha_c_5d    ,
        alpha_c_p_5d  ,
        alpha_c_p2_5d ,
        alpha_c_p3_5d ,
        gamma_t_5d    ,
        dx_5d         ,
        eta_c_5d      ;

  
  
  ptc_twiss, table=twiss, icase=56, no=2, closed_orbit;
  write, table=twiss, file="leir.56d.ptc.twiss";
  alpha_c_56d = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_56d = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_56d = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_56d = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_56d = table(ptc_twiss_summary,GAMMA_TR);
  dx_56d = table(twiss,leir$end,disp1);
  eta_c_56d    = table(ptc_twiss_summary,ETA_C);
  
  value,  gamma_t_56d, gamma_t_5d;
  value,  eta_c_56d, eta_c_5d;
  value,  alpha_c_56d, alpha_c_5d;

!  ptc_twiss, table=twiss, icase=6, no=2, closed_orbit;
!  write, table=twiss, file="leir.6d.ptc.twiss";
!  alpha_c_6d = table(ptc_twiss_summary,ALPHA_C);
!  dx_6d = table(twiss,leir$end,disp1);


  !!!!!      T I M E   T R U E, ,   T O T P A T H    F A L S E 
  ptc_setswitch, debuglevel=1, exact_mis=true, time=true, totalpath=false;

  ptc_twiss, table=twiss, icase=4, no=2, closed_orbit;
  write, table=twiss, file="leir.time.time4d.ptc.twiss";

  ptc_twiss, table=twiss, icase=5, no=2, closed_orbit;
  write, table=twiss, file="leir.time.5d.ptc.twiss";
  alpha_c_5dt = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_5dt = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_5dt = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_5dt = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_5dt = table(ptc_twiss_summary,GAMMA_TR);
  dx_5dt = table(twiss,leir$end,disp1);
  eta_c_5dt    = table(ptc_twiss_summary,ETA_C);
  
  ptc_twiss, table=twiss, icase=56, no=2, closed_orbit;
  write, table=twiss, file="leir.time.56d.ptc.twiss";
  alpha_c_56dt = table(ptc_twiss_summary,ALPHA_C);
  alpha_c_p_56dt = table(ptc_twiss_summary,ALPHA_C_P);
  alpha_c_p2_56dt = table(ptc_twiss_summary,ALPHA_C_P2);
  alpha_c_p3_56dt = table(ptc_twiss_summary,ALPHA_C_P3);
  gamma_t_56dt = table(ptc_twiss_summary,GAMMA_TR);
  dx_56dt = table(twiss,leir$end,disp1);
  eta_c_56dt    = table(ptc_twiss_summary,ETA_C);
!  ptc_twiss, table=twiss, icase=6, no=2, closed_orbit;
!  write, table=twiss, file="leir.time.6d.ptc.twiss";
!  alpha_c_6dt = table(ptc_twiss_summary,ALPHA_C);
!  dx_6dt = table(twiss,leir$end,disp1);



ptc_end;


plot, haxis=s, vaxis=beta11,beta22, colour=100;
plot, haxis=s, vaxis=disp1, colour=100;
plot, haxis=s, vaxis=x, colour=100;

value, dx, 
       dx_56d,  dx_56dt,  dx_5d,   dx_5dt,
       dx_56dl, dx_56dtl;!  5dl and  5dtl not existing 


value, eta_c_56d, eta_c_56dt, eta_c_5d,  eta_c_5dt,
       eta_c_56dl,eta_c_56dtl; !  5dl and  5dtl not existing 

value, alpha_c, 
       alpha_c_56d,  alpha_c_56dt, alpha_c_5d, alpha_c_5dt,
       alpha_c_56dl, alpha_c_56dtl; !  5dl and  5dtl not existing 

value, alpha_c_p_56d, alpha_c_p_56dt, alpha_c_p_5d,alpha_c_p_5dt,
       alpha_c_p_56dl,alpha_c_p_56dtl;

value, alpha_c_p2_56d, alpha_c_p2_56dt, alpha_c_p2_5d,alpha_c_p2_5dt,
       alpha_c_p2_56dl,alpha_c_p2_56dtl; !  5dl and  5dtl not existing 
       
value, alpha_c_p3_56d, alpha_c_p3_56dt, alpha_c_p3_5d,alpha_c_p3_5dt,
       alpha_c_p3_56dl,alpha_c_p3_56dtl; !  5dl and  5dtl not existing 

value, gamma_tr, 
       gamma_t_56d, gamma_t_56dt, gamma_t_5d, gamma_t_5dt, 
       gamma_t_56dl,gamma_t_56dtl; ! 5dl and  5dtl not existing 

