!--------1---------2---------3---------4---------5---------6---------7---------8
!-- This job should be run with MadX
!   Derived from nov16x.txt 
amu:=0.931494320;
setplot,ascale=1,lscale=1.5,sscale=3,rscale=1.5,xsize=28,ysize=20,
        post=1,font=-4,lwidth=5;
setplot,ascale=2,lscale=2,sscale=1.5,rscale=2,xsize=28,ysize=20,
        post=2,font=-4,lwidth=10;

!-- Define triplet lattice for gantry
BF: RBEND, L=0.6, ANGLE:=FANG, K1:=FK1;
BD: RBEND, L=0.6, ANGLE:=DANG, K1:=DK1;
RF: RBEND, L=0.6, ANGLE:=-3*FANG, K1:=RFK1;
RD: RBEND, L=0.6, ANGLE:=-3*DANG, K1:=RDK1;
SF: quadrupole, L=0.6, K1:=SFK1;
SD: quadrupole, L=0.6, K1:=SDK1;
D1: DRIFT, L=0.06;
D2: DRIFT, L:=0.5*PERIODL-BF->L-BD->L-D1->L;
COL: ECOLLIMATOR, XSIZE=0.1, YSIZE=0.1;
MARK: MARKER;
QF: QUADRUPOLE, L=0.100000037761, K1:=QFK1;
QD: QUADRUPOLE, L=0.102870968475, K1:=QDK1;
D1I: DRIFT, L=0.05;
D3I: DRIFT, L=0.050009708435;
D4I: DRIFT, L=0.0;
MID: MARKER;
D3: DRIFT, L=4.963444;
TRI: LINE=(BD,COL,D1,COL,BF,COL);
RTRI: LINE=(RD,COL,D1,COL,RF,COL);
STRI: LINE=(SD,COL,D1,COL,SF,COL);
CELL: LINE=(D2,-TRI,MARK,TRI,D2);
RCELL: LINE=(D2,-RTRI,MARK,RTRI,D2);
SCELL: LINE=(D2,-STRI,MARK,STRI,D2);
INS: LINE=(D3I,QF,D1I,QD);
!GANTRY: LINE=(INS,TRI,D2,8*CELL,D2,-TRI,MID,RTRI,D2,17*RCELL,D2,-RTRI,-INS,D3);
INS2: LINE=(INS,-INS);
PERIODL := 2.58;
PERIODN := 32;
FANG := 6.28318530718/PERIODN/4;
DANG := FANG;
fk1:=1.36;
dk1:=-1.07;
FK2 := 0;
DK2 := 0;
QX := 0.190184157474;
QY := 0.096976707038;
QS := 0.0;
QX' := -0.163247945453;
QY' := -0.18393605486;
ALFX := 0.0;
ALFY := 0.193989082742E-15;
BETX := 0.734826363803;
BETY := 0.734826363798;
X0 := 0.0;
PX0 := 0.0;
Y0 := 0.0;
PY0 := 0.0;
T0 := 0.0;
PT0 := 0.0;
QFK1 := 26.948730866925;
QDK1 := -21.917714109902;
BETA := 0.734826363802;

title,"Triplet lattice for gantry - nov16z";
beam,ex=3.6692e-6,ey=3.6692e-6,sige=0.03;

!-- Match and analyse CELL
beta:=3.15054522;
use,period=cell;
match,sequence=cell,use_macro;
vary,name=fk1,step=0.1;
vary,name=dk1,step=0.1;
m1: macro={ twiss; };
constraint,expr=table(twiss,cell$end,betx)=table(twiss,cell$end,bety);
constraint,expr=table(twiss,cell$end,mux)=1/4;
jacobian,calls=100,tolerance=1e-20; 
endmatch; 

select,flag=twiss,column=name,s,betx,alfx,mux,dx,dpx,x,px, 
bety,alfy,muy,dy,dpy,y,py,t,pt,alfa; 
savebeta,label=atc,place=#e,sequence=cell;
system,"erase twiss.lis";
twiss,rmatrix,table,file="twiss.lis"; 
plot,file="nov16z",haxis=s,vaxis1=betx,bety,vaxis2=dx,colour=100,interpolate, 
noversion,notitle;
plot,file="nov16z",haxis=s,vaxis1=betx,bety,vaxis2=dx,colour=100,interpolate, 
noversion;
plot,file="nov16z",haxis=s,vaxis1=betx,bety,vaxis2=dx,colour=100,interpolate, 
notitle;
plot,file="nov16z",haxis=s,vaxis1=betx,bety,vaxis2=dx,colour=100,interpolate;
system,"copy twiss.lis nov16z.lis";

stop;
