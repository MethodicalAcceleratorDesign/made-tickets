!--------------------------------------------------------------------------
! Optics file to calculate the optics of the transferline BT1_BTP. The trajectory is
! based on the report PS/OP/BR/Note 81-5 from J.P. Delahaye and J.P. Rinaud.
!
!
! - BT1 recombines totaly with BT2 after BT1.KF10 and with BT3 after BT2.KFA20.
! - The QNO10, QNO20 and QN30 are misaligned.
!
! This file is for protons with energy of 1.4 GeV and momentum of 2 GeV/c
!--------------------------------------------------------------------------
! Directory: /afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2013/madx
! Optics file created in September 2013 by V.Raginel, O.Berrig and B. Mikulec
!--------------------------------------------------------------------------

 title, 'BT line and BTP line. Protons - 1.4 GeV';

 option, echo, info, warn;

/******************************************************************************************
 * BT
 ******************************************************************************************/
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/strength/BT_BTP.str';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/elements/BT.ele';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/sequence/BT1.seq';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/aperture/BT.dbx';


/******************************************************************************************
 * BTP
 ******************************************************************************************/
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/strength/BTP.str';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/elements/BTP.ele';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/elements/stray.ele';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/sequence/stray.seq';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/sequence/BTP.seq';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/aperture/BTP.dbx';


/******************************************************************************************
 * set initial twiss parameters
 ******************************************************************************************/
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2014/inp/BT.inp';

!-----------------------------------------------------
! set initial position and angle (x,px) and (y,py)
! E.g. :
! x0 := 0.0;
! px0:= 0.0;
! y0 := 0.0;
! py0:= 0.0;
!-----------------------------------------------------

 INITBETA0:  BETA0,
      BETX = BETX0,
      ALFX = ALFX0,
      MUX  = MUX0,
      BETY = BETY0,
      ALFY = ALFY0,
      MUY  = MUY0,
      X    = X0,
      PX   = PX0,
      Y    = Y0,
      PY   = PY0,
      T    = T0,
      PT   = PT0,
      DX   = DX0,
      DPX  = DPX0,
      DY   = DY0,
      DPY  = DPY0;


/******************************************************************************************
 * Sequence: BTDUMMY is constructed from a shortened BT1 sequence
 ******************************************************************************************/
 seqedit,  sequence = bt1;
   END.DUMMY   :   MARKER;
   install, element=END.DUMMY, at=33.3;
   extract,sequence=bt1,from=bt1.start,to=END.DUMMY,newname=BTDUMMY;
 endedit;
!save, sequence=BTDUMMY, file='BTDUMMY.seq', bare;  stop;



/******************************************************************************************
 * Survey
 ******************************************************************************************/
 startBTP = 33.4;
 
 set,  format="-18s";
 set,  format="20.15f";


 bt1btp: SEQUENCE, refer=ENTRY  , l  =           70; ! Artificial length. Give space for moving the BTP line
   BTDUMMY      , at =            0;
   btp          , at =  startBTP   ;
 ENDSEQUENCE;
 !save, sequence=bt1btp, file=bt1btp.save, bare; stop;

 beam, particle=PROTON, pc=2.14;
 use, sequence=bt1btp;

 select, flag=survey, clear;
 select, flag=survey, column=name, s, l, z, x, y;

 ! New start of BT line, exit flange of the SMH15L1
 ! z0=1880.1405971066347, x0=2090.7822669027646  and  theta0 = 7.404510501918276 (GEODE 2007)
 
 survey, z0=1880.1405971066347, x0=2090.7822669027646, y0=2433.66-0.72, theta0=7.404510501918276, file="DUMMY.survey";

!!!       exec, calculatecenter("DUMMY.survey", BTP.VVS10);
!!!       calculatecenter(filename, element): macro = {

 	   // Copy "mysurvey" file to "mysurveyrow" file - adding row number
	   readmytable,file="DUMMY.survey",table=mysurvey;
 	   n_elem  =  table(mysurvey, tablelength);
 	   value, n_elem;
 	   create,table=mysurveyrow,column=_NAME,Z,X,Y,row;

 	   row=0;
	   Option, -info; 
	   while ( row < n_elem ) {
            row = row+1;
            setvars, table=mysurvey, row=row;
            fill,table=mysurveyrow;
 	   }	    
	   Option, info;
           write,table=mysurveyrow,file=file_name_row;

	   // Read the row number for the element where we want to calculate the center point
 	   row = table(mysurveyrow,  BTP.VVS10, row);
 	   value, row;
 	   if ( row < 1 ) { print, text="Error: row is less than 1. Stop"; stop; }

 	   // Calculate the first straight line
 	   SETVARS,TABLE=mysurvey,ROW=row-1;
 	   pos0.x = Z;
 	   pos0.y = X;
 	   SETVARS,TABLE=mysurvey,ROW=row;
 	   pos1.x = Z;
 	   pos1.y = X;
 	   VVS10.x = (pos0.x+pos1.x)/2;
 	   VVS10.y = (pos0.y+pos1.y)/2;

 	   delete,table=mysurvey;
 	   delete,table=mysurveyrow;

           ! value, VVS10.x, VVS10.y  ;

!!!	   second run of the macro, flattened
!!!        exec, calculatecenter("DUMMY.survey",BTP.DVT50);

	   // Copy "mysurvey" file to "mysurveyrow" file - adding row number
	   readmytable,file="DUMMY.survey",table=mysurvey;
 	   n_elem  =  table(mysurvey, tablelength);
 	   value, n_elem;
	   ! next statement crashes MAD-X
 	   create,table=mysurveyrow,column=_NAME,Z,X,Y,row;

 	   row=0;
	   Option, -info;
 	   while ( row < n_elem ) {
            row = row+1;
            setvars, table=mysurvey, row=row;
            fill,table=mysurveyrow;
 	   }	    
	   Option, info;
           write,table=mysurveyrow,file=file_name_row2;


	   // Read the row number for the element where we want to calculate the center point
 	   row = table(mysurveyrow,  BTP.DVT50, row);
 	   value, row;
 	   if ( row < 1 ) { print, text="Error: row is less than 1. Stop"; stop; }

 	   // Calculate the first straight line
 	   SETVARS,TABLE=mysurvey,ROW=row-1;
 	   pos0.x = Z;
 	   pos0.y = X;
 	   SETVARS,TABLE=mysurvey,ROW=row;
 	   pos1.x = Z;
 	   pos1.y = X;
           DVT50.x = (pos0.x+pos1.x)/2;
           DVT50.y = (pos0.y+pos1.y)/2;

 	   delete,table=mysurvey2;
 	   delete,table=mysurveyrow2;

           value, DVT50.x, DVT50.y  ;

stop;

/*************************************
 * Note that the coordinates used by TS/SU
 * and in MADX are different:
 *      MADX    TS/SU
 *       Z        X
 *       X        Y
 *       Y        Z
 *************************************/






